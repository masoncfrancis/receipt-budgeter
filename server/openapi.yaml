openapi: 3.2.0
info:
  title: Receipt Budgeter API
  version: 1.0.0
  description: >-
    Minimal OpenAPI spec for the Receipt Budgeter service. Provides endpoints
    for retrieving budget information, analyzing receipt images (file upload),
    and submitting receipts (JSON transactions).
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /getBudgetInformation:
    get:
      summary: Get budget categories and accounts
      operationId: getBudgetInformation
      responses:
        '200':
          description: Budget categories and accounts returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetInformationResponse'
              examples:
                example-1:
                  summary: Example response
                  value:
                    availableCategories:
                      - id: food
                        name: Food & Dining
                      - id: transport
                        name: Transportation
                    accounts:
                      - id: checking
                        name: Checking Account
                      - id: credit-card
                        name: Credit Card

  /analyzeReceipt:
    post:
      summary: Analyze an uploaded receipt image
      operationId: analyzeReceipt
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |-
                    Receipt image file to analyze.
                    Allowed MIME types: image/png, image/jpeg, image/webp, image/heic, image/heif
              required:
                - file
            encoding:
              file:
                # Some tools accept a comma-separated list here; this documents allowed types
                contentType: "image/png, image/jpeg, image/webp, image/heic, image/heif"
      responses:
        '200':
          description: Analysis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeReceiptResponse'
              examples:
                example-1:
                  summary: Typical analysis
                  value:
                    merchantName: "Corner Grocery"
                    merchantLocation: "123 Woodward Ave, Detroit"
                    receiptDate: "2025-10-01"
                    subtotal: 42.5
                    taxAmount: 3.4
                    totalPrice: 45.9
                    items:
                      - name: "2% Reduced Fat"
                        itemKind: "milk"
                        budgetCategoryGuess: "grocery"
                        price: 3.5
                      - name: "Whole Grain Loaf"
                        itemKind: "bread"
                        budgetCategoryGuess: "grocery"
                        price: 2.5

  /submitReceipt:
    post:
      summary: Submit parsed receipt transactions
      operationId: submitReceipt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitReceiptRequest'
            examples:
                example-1:
                  summary: Submit a single receipt split across categories
                  value:
                    accountId: "checking"
                    merchantName: "Corner Grocery"
                    receiptDate: "2025-10-01"
                    subtotal: 42.5
                    tax: 3.4
                    total: 45.9
                    splits:
                      - categoryId: food
                        amount: 30.0
                        description: "Groceries"
                      - categoryId: household
                        amount: 15.9
                        description: "Household supplies (includes tax)"
      responses:
        '200':
          description: Receipt submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
                required:
                  - ok
              examples:
                example-1:
                  value:
                    ok: true
                    id: "abc123"

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    BudgetInformationResponse:
      type: object
      properties:
        availableCategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      required:
        - availableCategories
        - accounts

    AnalyzeReceiptResponse:
      type: object
      properties:
        merchantName:
          type: string
        merchantLocation:
          type: string
        receiptDate:
          type: string
          format: date
        subtotal:
          type: number
        taxAmount:
          type: number
        totalPrice:
          type: number
        items:
          type: array
          items:
            $ref: '#/components/schemas/AnalyzeItem'
      required:
        - totalPrice
        - items

    AnalyzeItem:
      type: object
      properties:
        itemName:
          type: string
        name:
          type: string
        itemKind:
          type: string
        price:
          type: number
        budgetCategoryGuess:
          type: string
      required:
        - price

    Transaction:
      type: object
      properties:
        name:
          type: string
        itemKind:
          type: string
        budgetCategoryGuess:
          type: string
        price:
          type: number
          format: float
      required:
        - name
        - price
    Split:
      type: object
      properties:
        categoryId:
          type: string
          description: Budget category id (should match an available category)
        amount:
          type: number
          format: float
          description: Amount (including tax portion) allocated to this category
        description:
          type: string
          description: Optional free-text description of the split
      required:
        - categoryId
        - amount

    SubmitReceiptRequest:
      type: object
      properties:
        accountId:
          type: string
          description: Id of the account this multi-category transaction belongs to
        merchantName:
          type: string
        receiptDate:
          type: string
          format: date
        subtotal:
          type: number
          format: float
        tax:
          type: number
          format: float
        total:
          type: number
          format: float
        splits:
          type: array
          description: List of how the total cost is split across categories. Must sum to subtotal.
          items:
            $ref: '#/components/schemas/Split'
      required:
        - accountId
        - splits

  securitySchemes: {}
